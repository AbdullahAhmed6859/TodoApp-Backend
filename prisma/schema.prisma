generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model todoLists {
  id        Int       @id @default(autoincrement())
  userId    Int       @map("user_id")
  title     String    @db.VarChar(100)
  createdAt DateTime? @default(now()) @db.Timestamptz(6) @map("created_at")
  updatedAt DateTime? @default(now()) @db.Timestamptz(6) @map("updated_at")
  users     users     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  todos     todos[]
  @@map("todo_lists")
}

model todos {
  id          Int        @id @default(autoincrement())
  listId      Int        @map("list_id")
  title       String     @db.VarChar(100)
  description String     @default("")
  createdAt   DateTime?  @default(now()) @db.Timestamptz(6) @map("created_at")
  updatedAt   DateTime?  @default(now()) @db.Timestamptz(6) @map("updated_at")
  done        Boolean    @default(false)
  todoLists   todoLists @relation(fields: [listId], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model users {
  id        Int          @id @default(autoincrement())
  firstName String       @db.VarChar(50) @map("first_name")
  lastName  String       @db.VarChar(50) @map("last_name")
  email     String       @unique
  password  String       @db.VarChar(255)
  createdAt DateTime?    @default(now()) @db.Timestamptz(6) @map("created_at")
  updatedAt DateTime?    @default(now()) @db.Timestamptz(6) @map("updated_at")
  todoLists todoLists[]
}
